<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rootbant.wxapp.mapper.UsersMapper">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="com.rootbant.wxapp.entity.Users">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="face_image" property="faceImage" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="fans_counts" property="fansCounts" jdbcType="INTEGER"/>
        <result column="follow_counts" property="followCounts" jdbcType="INTEGER"/>
        <result column="receive_like_counts" property="receiveLikeCounts" jdbcType="INTEGER"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        id,
        username,
        `password`,
        face_image,
        nickname,
        fans_counts,
        follow_counts,
        receive_like_counts
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="users.id">
            <selectKey keyColumn="id" resultType="string" keyProperty="users.id" order="BEFORE" >
                 select replace(UUID(),"-","")
            </selectKey>
        INSERT INTO users (
            id,
            username,
            `password`,
            face_image,
            nickname,
            fans_counts,
            follow_counts,
            receive_like_counts
        ) VALUES (
            #{users.id,jdbcType=VARCHAR} ,
            #{users.username,jdbcType=VARCHAR},
            #{users.password,jdbcType=VARCHAR},
            #{users.faceImage,jdbcType=VARCHAR},
            #{users.nickname,jdbcType=VARCHAR},
            #{users.fansCounts,jdbcType=INTEGER},
            #{users.followCounts,jdbcType=INTEGER},
            #{users.receiveLikeCounts,jdbcType=INTEGER}
        )
    </insert>

    <!--auto generated Code-->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="users.id">
        INSERT INTO users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="users.id!=null"> id,</if>
            <if test="users.username!=null"> username,</if>
            <if test="users.password!=null"> `password`,</if>
            <if test="users.faceImage!=null"> face_image,</if>
            <if test="users.nickname!=null"> nickname,</if>
            <if test="users.fansCounts!=null"> fans_counts,</if>
            <if test="users.followCounts!=null"> follow_counts,</if>
            <if test="users.receiveLikeCounts!=null"> receive_like_counts,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="users.id!=null">#{users.id,jdbcType=VARCHAR},
            </if>
            <if test="users.username!=null">#{users.username,jdbcType=VARCHAR},
            </if>
            <if test="users.password!=null">#{users.password,jdbcType=VARCHAR},
            </if>
            <if test="users.faceImage!=null">#{users.faceImage,jdbcType=VARCHAR},
            </if>
            <if test="users.nickname!=null">#{users.nickname,jdbcType=VARCHAR},
            </if>
            <if test="users.fansCounts!=null">#{users.fansCounts,jdbcType=INTEGER},
            </if>
            <if test="users.followCounts!=null">#{users.followCounts,jdbcType=INTEGER},
            </if>
            <if test="users.receiveLikeCounts!=null">#{users.receiveLikeCounts,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <!--auto generated Code-->
    <insert id="insertList">
        INSERT INTO users (
            id,
            username,
            `password`,
            face_image,
            nickname,
            fans_counts,
            follow_counts,
            receive_like_counts
        )VALUES
        <foreach collection="userss" item="users" index="index" separator=",">
            (
            #{users.id,jdbcType=VARCHAR},
            #{users.username,jdbcType=VARCHAR},
            #{users.password,jdbcType=VARCHAR},
            #{users.faceImage,jdbcType=VARCHAR},
            #{users.nickname,jdbcType=VARCHAR},
            #{users.fansCounts,jdbcType=INTEGER},
            #{users.followCounts,jdbcType=INTEGER},
            #{users.receiveLikeCounts,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <!--auto generated Code-->
    <update id="updateByPrimaryKeySelective">
        UPDATE users
        <set>
            <if test="users.username != null"> username= #{users.username,jdbcType=VARCHAR},</if>
            <if test="users.password != null"> `password`= #{users.password,jdbcType=VARCHAR},</if>
            <if test="users.faceImage != null"> face_image= #{users.faceImage,jdbcType=VARCHAR},</if>
            <if test="users.nickname != null"> nickname= #{users.nickname,jdbcType=VARCHAR},</if>
            <if test="users.fansCounts != null"> fans_counts= #{users.fansCounts,jdbcType=INTEGER},</if>
            <if test="users.followCounts != null"> follow_counts= #{users.followCounts,jdbcType=INTEGER},</if>
            <if test="users.receiveLikeCounts != null"> receive_like_counts= #{users.receiveLikeCounts,jdbcType=INTEGER}</if>
        </set>
        WHERE id = #{users.id,jdbcType=VARCHAR}
    </update>
    <select id="hasUserByName" resultMap="BaseResultMap">
        select  * from users where  username=#{username,jdbcType=VARCHAR}
    </select>
    <select id="queryUserForLogin" resultMap="BaseResultMap">
        select * from users where username=#{username,jdbcType=VARCHAR}  and password=#{password,jdbcType=VARCHAR}
    </select>
    <select id="queryUserInfo" resultMap="BaseResultMap">
    select  * from users where id=#{userId,jdbcType=VARCHAR}
    </select>
    <select id="isUserLikeVideo" resultType="java.lang.Integer">
            select count(*) from  users_like_videos   where user_id=#{loginUserId} and video_id=#{videoId,jdbcType=VARCHAR}
    </select>
</mapper>

